/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-09-20 08:43:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class check_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"utf-8\">\r\n");
      out.write("	<title>체크박스</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-1.12.4.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("	$(function() {\r\n");
      out.write("\r\n");
      out.write("		//전체체크와 헤제\r\n");
      out.write("		$(\"#all\").click(function() {\r\n");
      out.write("			if($(\"#all\").is(\":checked\")) {\r\n");
      out.write("				\r\n");
      out.write("				//체크에 따른 출력\r\n");
      out.write("				var txt = \"\";\r\n");
      out.write("				$(\"[name=item]\").each(function(){\r\n");
      out.write("					if($(this).prop(\"checked\")==false){\r\n");
      out.write("						txt += $(this).val();\r\n");
      out.write("					}\r\n");
      out.write("				})\r\n");
      out.write("				$(\"#result\").append(txt); //\r\n");
      out.write("				$(\"[name=item]\").prop(\"checked\", true);\r\n");
      out.write("			}else{ \r\n");
      out.write("				$(\"[name=item]\").prop(\"checked\", false);\r\n");
      out.write("				$(\"#result\").text(\"\");	  //\r\n");
      out.write("			}\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("		//아이템 전체 체크도 전체체크\r\n");
      out.write("		$(\"[name=item]\").click(function() {\r\n");
      out.write("			var total = $(\"[name=item]\").length;\r\n");
      out.write("			var checked = $(\"[name=item]:checked\").length;\r\n");
      out.write("		\r\n");
      out.write("			if(total != checked) {\r\n");
      out.write("				$(\"#all\").prop(\"checked\", false);\r\n");
      out.write("			}else{ $(\"#all\").prop(\"checked\", true); \r\n");
      out.write("		}\r\n");
      out.write("			//체크에 따른 출력\r\n");
      out.write("			if($(this).is(\":checked\")){\r\n");
      out.write("				$(\"#result\").append($(this).val());\r\n");
      out.write("			}else{\r\n");
      out.write("				$(\"#result\").text( $(\"#result\").text().replace($(this).val(), \"\") ); \r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("		//체크박스 성공 실패\r\n");
      out.write("		$(\"#check\").click(function() {\r\n");
      out.write("			var checked = $(\"[name=item]:checked\").length;\r\n");
      out.write("			if (checked == 0) {\r\n");
      out.write("				alert(\"선택해주세요\");\r\n");
      out.write("			}else if(checked <= 4 || $(\"all\").is(\":checked\")) { \r\n");
      out.write("				alert(\"성공\");\r\n");
      out.write("			}else{ \r\n");
      out.write("				alert(\"실패\");\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<h3>체크박스 클리어!</h3>\r\n");
      out.write("	<hr>\r\n");
      out.write("	\r\n");
      out.write("	<form method=\"get\" action=\"CheckboxServlet\">\r\n");
      out.write("		<input type=\"checkbox\" name=\"all\" id=\"all\" value=\"all\"><label for = \"all\">all</label>\r\n");
      out.write("		<input type=\"button\" name=\"check\" id=\"check\" value=\"확인\">\r\n");
      out.write("		<br><br>\r\n");
      out.write("		<input type=\"checkbox\" name=\"item\" id=\"a\" value=\"사과\"><label for = \"a\">사과</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"item\" id=\"b\" value=\"포도\"><label for = \"b\">포도</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"item\" id=\"c\" value=\"감귤\"><label for = \"c\">감귤</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"item\" id=\"d\" value=\"백향과\"><label for = \"d\">백향과</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"item\" id=\"e\" value=\"리치\"><label for = \"e\">리치</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"item\" id=\"f\" value=\"망고\"><label for = \"f\">망고</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"item\" id=\"g\" value=\"키위\"><label for = \"g\">키위</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"item\" id=\"h\" value=\"파인애플\"><label for = \"h\">파인애플</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"item\" id=\"i\" value=\"수박\"><label for = \"i\">수박</label>\r\n");
      out.write("		<br><br>\r\n");
      out.write("		<div id=\"result\"></div>\r\n");
      out.write("	</form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
