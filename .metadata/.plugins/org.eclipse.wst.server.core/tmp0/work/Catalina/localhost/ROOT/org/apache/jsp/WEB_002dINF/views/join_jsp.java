/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-09-20 08:58:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-1.12.4.min.js\"></script>\r\n");
      out.write("<script>		\r\n");
      out.write("		$(function(){\r\n");
      out.write("			\r\n");
      out.write("			//아이디 입력 영어 숫자만\r\n");
      out.write("			$(\"#id\").keyup(function() {\r\n");
      out.write("				\r\n");
      out.write("                if (!(event.keyCode >=37 && event.keyCode<=40)) {\r\n");
      out.write("                        var inputVal = $(this).val();\r\n");
      out.write("                        $(this).val(inputVal.replace(/[^a-z0-9]/gi,''));\r\n");
      out.write("                }\r\n");
      out.write("			})\r\n");
      out.write("			\r\n");
      out.write("			//아이디 중복확인\r\n");
      out.write("			$(\"#idChk\").click(function() {\r\n");
      out.write("				var id = $(\"#id\").val();\r\n");
      out.write("				\r\n");
      out.write("				if (id == '') {\r\n");
      out.write("					alert(\"아이디를 입력해주세요.\");\r\n");
      out.write("				}else if (id == 'test') {\r\n");
      out.write("						alert(\"중복된 아이디입니다.\");\r\n");
      out.write("				}else {\r\n");
      out.write("					alert(\"사용 가능한 아이디입니다.\");\r\n");
      out.write("				}\r\n");
      out.write("			})\r\n");
      out.write("			\r\n");
      out.write("			//비밀번호 확인\r\n");
      out.write("			$(\"#regi_btn\").click(function() {\r\n");
      out.write("				var pass = $(\"#pass\").val();\r\n");
      out.write("				var pass2 = $(\"#pass2\").val();				\r\n");
      out.write("				if (pass == '') \r\n");
      out.write("					alert(\"비밀번호를 입력해주세요.\");\r\n");
      out.write("				else if ($(pass).val() != $(pass2).val())\r\n");
      out.write("			        alert(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("				else\r\n");
      out.write("					return true;\r\n");
      out.write("				\r\n");
      out.write("				var emailRule = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n");
      out.write("				var email = $(\"#email1\").val() + '@' + $(\"#email2\").val();\r\n");
      out.write("				if(!emailRule.test(email)){\r\n");
      out.write("					alert(\"유효하지 않은 이메일입니다.\");\r\n");
      out.write("					}				\r\n");
      out.write("			})\r\n");
      out.write("			\r\n");
      out.write("			//이름 제한\r\n");
      out.write("			$(\"#name\").keyup(function() {\r\n");
      out.write("			    var desc = $(\"#name\").val();\r\n");
      out.write("			    if( desc.length > 5 ) {\r\n");
      out.write("			        alert(\"이름은 5자를 초과할 수 없습니다.\");\r\n");
      out.write("			        $(\"#name\").val(desc.substring(0, 5));\r\n");
      out.write("			    }\r\n");
      out.write("                if (!(event.keyCode >=37 && event.keyCode<=40)) {\r\n");
      out.write("                        var inputVal = $(this).val();\r\n");
      out.write("                        $(this).val(inputVal.replace(/[^a-z0-9ㄱ-힣]/gi,''));\r\n");
      out.write("                }\r\n");
      out.write("			})\r\n");
      out.write("			\r\n");
      out.write("			//주민번호\r\n");
      out.write("			$(\"#jumin2\").keyup(function(){\r\n");
      out.write("				var jumin2 = $(\"#jumin2\").val().charAt($(\"#jumin2\").val().length-1);\r\n");
      out.write("			\r\n");
      out.write("		        $(\"#jumin2\").val(desc.substring(0, 6));\r\n");
      out.write("		        $(\"#jumin3\").val(desc.substring(0, 7));\r\n");
      out.write("		        \r\n");
      out.write("				$(\"#jumin3\").val( $(\"#jumin3\").val() + jumin2 );\r\n");
      out.write("			\r\n");
      out.write("				if($(\"#jumin2\").val().length > 1){\r\n");
      out.write("					$(\"#jumin2\").val( $(\"#jumin2\").val().slice(0,-1) + '*' );\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		})\r\n");
      out.write("				\r\n");
      out.write("			});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h1>회원가입</h1>\r\n");
      out.write("\r\n");
      out.write("아이디: <input type=\"text\" size=\"10\" maxlength=\"15\" name=\"id\" id=\"id\">\r\n");
      out.write("	  <input type=\"button\" name=\"idChk\" id=\"idChk\" value=\"중복체크\"><br><br>\r\n");
      out.write("비밀번호 : <input type=\"password\" size=\"15\" maxlength=\"20\" name=\"pass\" id=\"pass\"><br><br>\r\n");
      out.write("비밀번호 확인 : <input type=\"password\" size=\"15\" maxlength=\"20\" name=\"pass2\" id=\"pass2\"><br><br>\r\n");
      out.write("이름 : <input type=\"text\" size=\"13\" name=\"name\" id=\"name\" onkeyup=\"fncNameKeyUp(this)\"><br><br>\r\n");
      out.write("이메일 : <input type=\"text\" size=\"15\" name=\"email1\" id=\"email1\">@<input type=\"text\" size=\"15\" name=\"email2\" id=\"email2\"><br><br>\r\n");
      out.write("휴대폰 : <select name=\"ph1\">\r\n");
      out.write("       <option value=\"010\">010</option>\r\n");
      out.write("       <option value=\"011\">011</option>\r\n");
      out.write("       <option value=\"016\">016</option>\r\n");
      out.write("       <option value=\"017\">017</option>\r\n");
      out.write("       <option value=\"019\">019</option>\r\n");
      out.write("     </select>\r\n");
      out.write("     - <input type=\"text\" name=\"ph2\" size=\"5\" maxlength=\"4\" id=\"ph2\">\r\n");
      out.write("     - <input type=\"text\" name=\"ph3\" size=\"5\" maxlength=\"4\" id=\"ph3\"><br><br>\r\n");
      out.write("   성별 : <input type=\"radio\" name=\"gender\" value=\"남자\"> 남자&nbsp;&nbsp;\r\n");
      out.write("      <input type=\"radio\" name=\"gender\" value=\"여자\"> 여자<br><br>\r\n");
      out.write("   주민번호 : <input type = \"text\" name = \"jumin1\" id = \"jumin1\"> -  <input type = \"text\" name = \"jumin2\" id = \"jumin2\" >\r\n");
      out.write("   		 <input type = \"hidden\" name = \"jumin3\" id = \"jumin3\"><br><br>\r\n");
      out.write("   주소 : <input type=\"text\" name=\"address\" size=\"15\" maxlength=\"15\"><br>\r\n");
      out.write("   *주소는 (시/도)만 입력해주세요 (예: 경기도, 서울특별시, 경상남도 등)\r\n");
      out.write("   \r\n");
      out.write("   <td align=\"center\">\r\n");
      out.write("   <hr><br>\r\n");
      out.write("    <input type=\"button\" id=\"regi_btn\" value=\"가입신청\">&nbsp;\r\n");
      out.write("    <input type=\"reset\" value=\"다시입력\">&nbsp;\r\n");
      out.write("    <input type=\"button\" value=\"취소\">\r\n");
      out.write("   </td>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
